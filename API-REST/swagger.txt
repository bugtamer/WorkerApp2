swagger: "2.0"
info:
  description: "Descripción de la API REST de WorkerApp. Para más información:[https://github.com/bugtamer/WorkerApp2](https://github.com/bugtamer/WorkerApp2) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger WorkerApp"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "profesionales"
  description: "Toda la información sobre nuestros profesionales"
  externalDocs:
    description: "Para más información"
    url: "https://github.com/bugtamer/WorkerApp2"
schemes:
- "https"
- "http"
paths:
  /profesional/{id}:
    get:
      tags:
      - "profesional"
      summary: "Get profesional by id"
      description: ""
      operationId: "GetProfesionalById"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Profesional' # ESTA PUESTO USUARIO SOLO PARA QUE NO DE ERROR
        403:
          description: "No tienes permiso"
        404:
          description: "Especifica el usuario"
        500:
          description: "Error interno"
    put:
      tags:
      - "profesional"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id that need to be updated"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Updated profesional object"
        required: true
        schema:
          $ref: '#/definitions/Profesional' # ESTA PUESTO USUARIO SOLO PARA QUE NO DE ERROR
      responses:
        400:
          description: "Invalid profesional supplied"
        404:
          description: "Profesional not found"
    delete:
      tags:
      - "store"
      summary: "Delete purchase order by ID"
      description: ""
      operationId: "deleteProfesional"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the profesional that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
  /profesional/geoservice:
    get:
      tags:
      - "profesionales"
      summary: "Encontrar un profesional por geolocalizacion (latitud y longitud) y servicios ofrecidos"
      description: "devuelve una lista profesionales"
      operationId: "getManitasById"
      produces:
      - "application/json"
      parameters:
      - name: "servicio"
        in: "query"
        description: "tipo de servicio ofrecido de los profesionales devueltos"
        required: true
        type: "string"
      - name: "distancia"
        in: "query"
        description: "distancia máxima, en km, entre el usuario y los profesionales devueltos"
        required: true
        type: "number"
      - name: "latitud"
        in: "query"
        description: "coordenada geográfica latitud del usuario"
        required: true
        type: "number"
      - name: "longitud"
        in: "query"
        description: "coordenada geográfica longitud del usuario"
        required: true
        type: "number"
      responses:
        200:
          description: "operación existosa"
          schema:
            $ref: "#/definitions/Profesional"
        400:
          description: "ID suministrado incorrecto"
        404:
          description: "Profesional no encontrado"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Usuario:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      apellidos:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      avatar:
        type: "string"
      ubicacion:
        $ref: "#/definitions/Ubicacion"
      valoracionesHechas:
        type: "array"
        items:
          $ref: "#/definitions/Valoracion"
  Ubicacion:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      latitud:
        type: "number"
      longitud:
        type: "number"
  Valoracion:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      autor:
        $ref: "#/definitions/Usuario"
      receptor:
        $ref: "#/definitions/Profesional"
      comentario:
        type: "string"
      puntuacion:
        type: "integer"
        format: "int64"
      timestamp:
        type: "string"
        format: "date"
  Mensaje:
    type: "object"
    properties:
      id:
        type: "integer"
      emisor:
        $ref: "#/definitions/Usuario"
      receptor:
        $ref: "#/definitions/Usuario"
      texto:
        type: "string"
      urlImagen:
        type: "string"
      timestamp:
        type: "string"
        format: "date"
  Profesional:
    type: "object"
    properties:
      profesion:
        type: "string"
      educacion:
        type: "array"
        items:
          type: "string"
      experiencia:
        type: "array"
        items:
          type: "string"
      valoracion:
        type: "array"
        items:
          $ref: "#/definitions/Valoracion"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"