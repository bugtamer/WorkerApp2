{
  "swagger": "2.0",
  "info": {
    "description": "Descripción de la API REST de WorkerApp. Para más información:[https://github.com/bugtamer/WorkerApp2](https://github.com/bugtamer/WorkerApp2) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger WorkerApp",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "usuario",
      "description": "Toda la información sobre nuestros usuarios, quienes buscan profesionales",
      "externalDocs": {
        "description": "Para más información",
        "url": "https://github.com/bugtamer/WorkerApp2"
      }
    },
    {
      "name": "profesional",
      "description": "Toda la información sobre nuestros profesionales y los servicios que ofrecen",
      "externalDocs": {
        "description": "Para más información",
        "url": "https://github.com/bugtamer/WorkerApp2"
      }
    },
    {
      "name": "geolocalizacion",
      "description": "datos geolocalizados",
      "externalDocs": {
        "description": "Para más información",
        "url": "https://github.com/bugtamer/WorkerApp2"
      }
    },
    {
      "name": "mensajes",
      "description": "Toda la información sobre los mensajes del chat",
      "externalDocs": {
        "description": "Para más información",
        "url": "https://github.com/bugtamer/WorkerApp2"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/profesional": {
      "post": {
        "tags": [
          "profesional"
        ],
        "summary": "añadir profesional",
        "description": "añadir profesional",
        "operationId": "addProfesional",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "profesional",
            "in": "body",
            "description": "el profesional que será añadido",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profesional"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Añadido exitosamente"
          },
          "400": {
            "description": "Petición errónea"
          },
          "403": {
            "description": "No está autorizado"
          }
        }
      }
    },
    "/profesional/servicios": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "lista de servicios que contienen el término de búsqueda",
        "description": "lista de servicios ofrecidos por los profesionales que contienen el término de búsqueda",
        "operationId": "getProfesionesProfesional",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "terminoBusqueda",
            "in": "query",
            "description": "término de búsqueda",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Término de búsqueda no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/profesional/{id}": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "Get profesional by id",
        "description": "",
        "operationId": "GetProfesionalById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profesional"
            }
          },
          "403": {
            "description": "No tienes permiso"
          },
          "404": {
            "description": "Especifica el usuario"
          },
          "500": {
            "description": "Error interno"
          }
        }
      },
      "put": {
        "tags": [
          "profesional"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated profesional object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profesional"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid profesional supplied"
          },
          "404": {
            "description": "Profesional not found"
          }
        }
      },
      "delete": {
        "tags": [
          "profesional"
        ],
        "summary": "Delete purchase order by ID",
        "description": "",
        "operationId": "deleteProfesional",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the profesional that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/profesional/{id}/experiencia": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "experiencia del profesional",
        "description": "obtener la experiencia del profesional por ID",
        "operationId": "getExperenciaProfesionalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID requerido para recuperar la experiencia del profesional",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "No estas autorizado"
          },
          "404": {
            "description": "Profesional no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/profesional/{id}/educacion": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "educacion del profesional",
        "description": "obtener la educacion del profesional por ID",
        "operationId": "getEducacionProfesionalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID requerido para recuperar la educacion del profesional",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "No estas autorizado"
          },
          "404": {
            "description": "Profesional no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/profesional/{id}/valoraciones": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "valoraciones del profesional",
        "description": "obtener las valoraciones del profesional por ID",
        "operationId": "getValoracionesProfesionalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID requerido para recuperar las valoraciones del profesional",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Valoracion"
              }
            }
          },
          "403": {
            "description": "No estas autorizado"
          },
          "404": {
            "description": "Profesional no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/profesional/{id}/valoraciones/media": {
      "get": {
        "tags": [
          "profesional"
        ],
        "summary": "valoración media del profesional",
        "description": "obtener la valoración media del profesional por ID",
        "operationId": "getValoracionMediaProfesionalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID requerido para recuperar la media de las valoraciones del profesional",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer"
            }
          },
          "403": {
            "description": "No estas autorizado"
          },
          "404": {
            "description": "Profesional no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/geolocalizacion/servicios": {
      "get": {
        "tags": [
          "geolocalizacion"
        ],
        "summary": "'Encontrar un profesional por geolocalizacion y servicios ofrecidos'",
        "description": "devuelve una lista profesionales",
        "operationId": "getManitasById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "servicio",
            "in": "query",
            "description": "tipo de servicio ofrecido de los profesionales devueltos",
            "required": true,
            "type": "string"
          },
          {
            "name": "distancia",
            "in": "query",
            "description": "distancia máxima, en km, entre el usuario y los profesionales devueltos",
            "required": true,
            "type": "number"
          },
          {
            "name": "latitud",
            "in": "query",
            "description": "coordenada geográfica latitud del usuario",
            "required": true,
            "type": "number"
          },
          {
            "name": "longitud",
            "in": "query",
            "description": "coordenada geográfica longitud del usuario",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa",
            "schema": {
              "$ref": "#/definitions/Profesional"
            }
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Profesional no encontrado"
          }
        }
      }
    },
    "/geolocalizacion/usuario/{id}": {
      "get": {
        "tags": [
          "geolocalizacion"
        ],
        "summary": "'Encontrar la ubicación de un usuario por ID'",
        "description": "devuelve su unicación",
        "operationId": "getUbicacionUsuarioById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id del usuario del que se quiere obtener su ubicacion",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa",
            "schema": {
              "$ref": "#/definitions/Ubicacion"
            }
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/geolocalizacion/profesional/{id}": {
      "get": {
        "tags": [
          "geolocalizacion"
        ],
        "summary": "'Encontrar la ubicación de un profesional por ID'",
        "description": "devuelve su unicación",
        "operationId": "getUbicacionProfesionalById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id del profesional del que se quiere obtener su ubicacion",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa",
            "schema": {
              "$ref": "#/definitions/Ubicacion"
            }
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/geolocalizacion/distancia": {
      "get": {
        "tags": [
          "geolocalizacion"
        ],
        "summary": "'Encontrar la distancia entre un usuario y un profesional'",
        "description": "devuelve la distancia en km",
        "operationId": "getDistancia",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ubicacionUsuario",
            "in": "header",
            "description": "ubicacion del usuario",
            "required": true,
            "type": "string"
          },
          {
            "name": "ubicacionProfesional",
            "in": "header",
            "description": "ubicacion del profesional",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa",
            "schema": {
              "type": "number"
            }
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/mensajes/{mensajeId}": {
      "delete": {
        "tags": [
          "mensajes"
        ],
        "summary": "Eliminar un mensaje por ID del mensaje",
        "description": "borra un mensaje identificado por ID",
        "operationId": "removeMensaje",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mensajeId",
            "in": "path",
            "description": "Es el id del mensaje que va ser borrado",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa"
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Mensaje no encontrado"
          }
        }
      }
    },
    "/mensajes": {
      "get": {
        "tags": [
          "mensajes"
        ],
        "summary": "Obtener los mensajes de una conversacion entre un usuario y un profesional",
        "description": "Obtener los mensajes de una conversacion",
        "operationId": "getConversacion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usuarioId",
            "in": "query",
            "description": "Es el id del usuario que interviene en la conversación",
            "required": true,
            "type": "integer"
          },
          {
            "name": "profesionalId",
            "in": "query",
            "description": "Es el id del profesional que interviene en la conversación",
            "required": true,
            "type": "integer"
          },
          {
            "name": "from",
            "in": "query",
            "description": "recuperar mensajes de la conversación, de más reciente a más antiguo, a partir del mensaje indicado en from (incluido)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "indica el número máximo de mensajes a recuperar de la conversación, de más reciente a más antiguo",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mensaje"
              }
            }
          },
          "400": {
            "description": "IDs suministrados incorrectos"
          },
          "404": {
            "description": "Conversación no encontrada"
          }
        }
      },
      "post": {
        "tags": [
          "mensajes"
        ],
        "summary": "Añadir un nuevo mensaje",
        "description": "añadir un mensaje",
        "operationId": "addMensaje",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mensaje",
            "in": "body",
            "description": "Es el id del mensaje que va ser borrado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mensaje"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operación existosa"
          },
          "400": {
            "description": "ID suministrado incorrecto"
          },
          "404": {
            "description": "Mensaje no encontrado"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Usuario": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nombre": {
          "type": "string"
        },
        "apellidos": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "ubicacion": {
          "$ref": "#/definitions/Ubicacion"
        },
        "valoraciones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Valoracion"
          }
        }
      }
    },
    "Ubicacion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitud": {
          "type": "number"
        },
        "longitud": {
          "type": "number"
        }
      }
    },
    "Valoracion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "autor": {
          "$ref": "#/definitions/Usuario"
        },
        "receptor": {
          "$ref": "#/definitions/Profesional"
        },
        "comentario": {
          "type": "string"
        },
        "puntuacion": {
          "type": "integer",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Mensaje": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "emisor": {
          "$ref": "#/definitions/Usuario"
        },
        "receptor": {
          "$ref": "#/definitions/Usuario"
        },
        "texto": {
          "type": "string"
        },
        "urlImagen": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Profesional": {
      "type": "object",
      "properties": {
        "profesion": {
          "type": "string"
        },
        "educacion": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "experiencia": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valoracion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Valoracion"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}